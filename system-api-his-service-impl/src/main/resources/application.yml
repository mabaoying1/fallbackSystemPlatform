#192.168.10.146:8200/ws-api/hisShengGuKe?wsdl
server:
  port: 8200
  max-http-header-size: 502400
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # tomcat最大线程数，默认为200
    max-threads: 800
    # Tomcat启动初始化的线程数，默认值25
    min-spare-threads: 30
###服务别名----服务注册到注册中心名称
spring:
  application:
    name: app-soft-his
#  security:
#    basic:
#      enabled: true
#    user:
#      password: admin
#      name: admin
####actuator配置#####
#  boot:
#    admin:
#      client:
#        url: http://127.0.0.1:8800
#        instance:
#          prefer-ip: true
  his:
    datasource:
      type: com.alibaba.druid.pool.DruidDataSource
#      driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
#      url: jdbc:sqlserver://192.168.0.241:1433;DatabaseName=portal_his50
#      username: sa
#      password: bsoft
      driverClassName: oracle.jdbc.driver.OracleDriver
#      url: jdbc:oracle:thin:@192.168.0.109:1521:orcl2
      ##省骨科
#      url: jdbc:oracle:thin:@196.168.0.166:1521:his
#      username: his
#      password: HIS%1123
      url: jdbc:oracle:thin:@118.126.110.229:1521:orcl
      username: bsadmin
      password: bsadmintencent
#      username: his
#      password: his
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 200
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 from dual
      #是否在连接空闲一段时间后检测其可用性
      testWhileIdle: true
      #是否在获得连接后检测其可用性
      testOnBorrow: false
      #是否在连接放回连接池后检测其可用性
      testOnReturn: false
      #超过时间限制是否回收
      removeAbandoned: true
      #超时时间；单位为秒。180秒=3分钟
      removeAbandonedTimeout: 300
      #关闭abanded连接时输出错误日志 正式环境一般关闭
      logAbandoned: false
  portal:
    datasource:
      type: com.alibaba.druid.pool.DruidDataSource
#      driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
#      url: jdbc:sqlserver://192.168.0.241:1433;DatabaseName=master
#      username: sa
#      password: bsoft
#      driverClassName: oracle.jdbc.driver.OracleDriver
#      url: jdbc:oracle:thin:@127.0.0.1:1521:hip30
#      username: bship_cdr
#      password: bsoft
      driverClassName: oracle.jdbc.driver.OracleDriver
#      url: jdbc:oracle:thin:@192.168.0.109:1521:orcl2
#      url: jdbc:oracle:thin:@196.168.0.167:1521:portal
##      url: jdbc:oracle:thin:@118.126.110.229:1521:orcl
#      username: portal
#      password: PORTAL%1123
#      username: portal
#      password: portal

      url: jdbc:oracle:thin:@118.126.110.229:1521:orcl
      username: bsadmin
      password: bsadmintencent

      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 200
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 from dual
      #是否在连接空闲一段时间后检测其可用性
      testWhileIdle: true
      #是否在获得连接后检测其可用性
      testOnBorrow: false
      #是否在连接放回连接池后检测其可用性
      testOnReturn: false
      #超过时间限制是否回收
      removeAbandoned: true
      #超时时间；单位为秒。180秒=3分钟
      removeAbandonedTimeout: 300
      #关闭abanded连接时输出错误日志 正式环境一般关闭
      logAbandoned: false
  cloud:
    client:
      ipAddress: 127.0.0.1
eureka:
  client:
    service-url:
    ##### 当前会员服务注册到eureka服务地址
       defaultZone: http://121.5.142.110:8100/eureka
#       defaultZone: http://localhost:8100/eureka
    ### 需要将我的服务注册到eureka上
    register-with-eureka: true
    ####需要检索服务
    fetch-registry: true
    registry-fetch-interval-seconds: 30
# 心跳检测检测与续约时间
# 测试时将值设置设置小些，保证服务关闭后注册中心能及时踢出服务
  instance:
    instance-id: ${spring.cloud.client.ipAddress}:${spring.application.name}:${server.port}
    prefer-ip-address: true #访问路径可以显示IP
###Eureka客户端向服务端发送心跳的时间间隔，单位为秒（客户端告诉服务端自己会按照该规则）
    lease-renewal-interval-in-seconds: 30
####Eureka服务端在收到最后一次心跳之后等待的时间上限，单位为秒，超过则剔除（客户端告诉服务端按照此规则等待自己）
    lease-expiration-duration-in-seconds: 90

###springcloud  feign 默认开启支持ribbon 
###设置feign客户端超时时间 
###默认是一秒钟超过1S 异常 java.net.SocketTimeoutException: Read timed out
ribbon:
###指的是建立连接所用的时间，适用于网络状况正常的情况下，两端连接所用的时间。
 ReadTimeout: 80000
###指的是建立连接后从服务器读取到可用资源所用的时间。 
 ConnectTimeout: 50000
 
#####开启hystrix
 feign:
  hystrix:
   enabled: true
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 30000
#rocketmq:
#  producer:
#    group: app-soft-His
#  name-server: 127.0.0.1:9876
####################tx-lcn#################################
# 是否启动LCN负载均衡策略(优化选项，开启与否，功能不受影响)
tx-lcn:
  ribbon:
    loadbalancer:
      dtx:
        enabled: true
  # 默认之配置为TM的本机默认端口
  client:
#    manager-address: 127.0.0.1:8070
     manager-address: 121.5.142.110:8070
  # 开启日志,默认为false
  logger:
    enabled: true
      #    driver-class-name: com.mysql.jdbc.Driver
      #    jdbc-url: jdbc:mysql://127.0.0.1:3306/test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
      #    username: root
      #    password: bsoft
#    driver-class-name: oracle.jdbc.driver.OracleDriver
#    jdbc-url: jdbc:oracle:thin:@196.168.0.166:1521:his
#    username: zhlis
#    password: ZHLIS%1123
    driver-class-name: oracle.jdbc.driver.OracleDriver
    jdbc-url: jdbc:oracle:thin:@118.126.110.229:1521:orcl
    username: bsadmin
    password: bsadmintencent
######################配置打印日志级别###################################
logging:
  level:
    com:
      soft:
        api:
          service: debug
          mapper: debug
      codingapi:
        txlcn: DEBUG
##################################################################
system:
  #####0 不使用  1使用 [是否开启存放日志]
  isElasticsearch: 0
  ###elasticsearch的服务器地址
  elasticsearchHost: 121.5.142.110
  ####通过http请求的端口号是9200，通过客户端请求的端口号是9300
  elasticsearchPort: 9300
  ###设置es集群名称
  clusterName: my-application
